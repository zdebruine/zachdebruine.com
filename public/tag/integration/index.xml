<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>integration | Zach DeBruine</title>
    <link>https://zachdebruine.com/tag/integration/</link>
      <atom:link href="https://zachdebruine.com/tag/integration/index.xml" rel="self" type="application/rss+xml" />
    <description>integration</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>© 2021 Zach DeBruine</copyright><lastBuildDate>Tue, 12 Oct 2021 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://zachdebruine.com/media/icon_hu3a1a9d362c9f3f4d7273828c49d8e14c_75812_512x512_fill_lanczos_center_3.png</url>
      <title>integration</title>
      <link>https://zachdebruine.com/tag/integration/</link>
    </image>
    
    <item>
      <title>Integrating Heterogenous Samples with NMF</title>
      <link>https://zachdebruine.com/post/integrating-with-nmf/</link>
      <pubDate>Tue, 12 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://zachdebruine.com/post/integrating-with-nmf/</guid>
      <description>


&lt;div id=&#34;nmf-for-source-separation&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;NMF for source separation&lt;/h2&gt;
&lt;p&gt;One of the many applications of NMF is &lt;a href=&#34;https://en.wikipedia.org/wiki/Signal_separation&#34;&gt;source separation&lt;/a&gt;, aka blind signal separation, where a mixture of signals are resolved in a factor model. Different samples will contain different signals, some unique, and some shared. The goal might be to visualize samples based on signals they share, or to identify discriminating signals.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;integrative-nmf&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Integrative NMF?&lt;/h2&gt;
&lt;p&gt;Integrative NMF (iNMF) has been proposed for source separation and integration of heterogenous datasets (see &lt;a href=&#34;https://github.com/welch-lab/liger&#34;&gt;LIGER&lt;/a&gt;). However, iNMF requires a regularization hyperparameter to enforce integration, and fitting is inherently slow.&lt;/p&gt;
&lt;p&gt;Instead, we can simply run NMF on all signals and then annotate what factors are specific to metadata of interest.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;cancer-vs.-healthy-cell-signatures&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Cancer vs. healthy cell signatures&lt;/h2&gt;
&lt;p&gt;Classification of cancer cell-of-origin is a great example of source separation. Here, the challenge is to tease out signatures shared by cancer and healthy cell types to discover the cell type from which the cancer originated.&lt;/p&gt;
&lt;p&gt;We’ll use the &lt;code&gt;aml&lt;/code&gt; dataset from the &lt;code&gt;MLdata&lt;/code&gt; package:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;devtools::install_github(&amp;quot;zdebruine/MLdata&amp;quot;)
devtools::install_RcppML(&amp;quot;zdebruine/RcppML&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(RcppML)
library(MLdata)
library(ggplot2)
library(cowplot)
library(umap)
data(aml)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;MLdata::aml&lt;/code&gt; dataset contains samples from 123 patients with Acute Myelogenous Leukemia (AML) and 5 samples each for putative cells of origin (GMP, LMPP, or MEP cells) from healthy patients. Each sample contains information on ~800 differentially methylated regions (DMRs), a measure of gene expression signatures.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;table(colnames(aml))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## AML sample        GMP       LMPP        MEP 
##        123          5          5          5&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Since we have three cell types and cancer, we’ll choose a low factorization rank (&lt;code&gt;k = 5&lt;/code&gt;). We’ll fit to machine-tolerances and input ten random seeds so that &lt;code&gt;RcppML::nmf&lt;/code&gt; runs factorizations from ten unique random initializations, and returns the best model of the ten:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;nmf_model &amp;lt;- RcppML::nmf(aml, k = 5, tol = 1e-10, maxit = 1000, seed = 1:10, verbose = F)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;annotating-signal-sources&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Annotating signal sources&lt;/h2&gt;
&lt;p&gt;We can see which sample types are represented in each NMF factor:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(summary(nmf_model, group_by = colnames(aml), stat = &amp;quot;mean&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://zachdebruine.com/post/integrating-with-nmf/index.en_files/figure-html/summary_plot-1.png&#34; width=&#34;384&#34; style=&#34;display: block; margin: auto auto auto 0;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Notice how factor 3 almost exclusively describes methylation signal in healthy cells.&lt;/p&gt;
&lt;p&gt;Let’s plot factor 3 vs. factor 5:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;biplot(nmf_model, factors = c(3, 5), matrix = &amp;quot;h&amp;quot;, group_by = colnames(aml))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://zachdebruine.com/post/integrating-with-nmf/index.en_files/figure-html/biplot-1.png&#34; width=&#34;384&#34; style=&#34;display: block; margin: auto auto auto 0;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Clearly if we want to “integrate” cancer and healthy cells for the purposes of classifying cell-of-origin, we do not want to be including factor 3 in that analysis.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;umap-on-the-nmf-embedding&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;UMAP on the NMF embedding&lt;/h2&gt;
&lt;p&gt;Let’s learn a UMAP embedding of all samples on NMF coordinates using the full NMF model.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot_umap &amp;lt;- function(nmf_model){
  set.seed(123)
  u &amp;lt;- uwot::umap(t(nmf_model$h), n_neighbors = 10, metric = &amp;quot;cosine&amp;quot;, min_dist = 0.3, spread = 1)
  df &amp;lt;- data.frame(&amp;quot;umap1&amp;quot; = u[, 1], &amp;quot;umap2&amp;quot; = u[, 2], &amp;quot;group&amp;quot; = colnames(nmf_model$h))
  ggplot(df, aes(x = umap1, y = umap2, color = group)) + geom_point() + theme_void()
}

plot_umap(nmf_model)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://zachdebruine.com/post/integrating-with-nmf/index.en_files/figure-html/umap_all-1.png&#34; width=&#34;288&#34; style=&#34;display: block; margin: auto auto auto 0;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Clearly there are fundamental differences between cancer and healthy cells.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;integrating-by-source-separation&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Integrating by source separation&lt;/h2&gt;
&lt;p&gt;Let’s do the same as we did above, but now excluding factor 3:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot_umap(nmf_model[-3])&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://zachdebruine.com/post/integrating-with-nmf/index.en_files/figure-html/umap_integrated-1.png&#34; width=&#34;288&#34; style=&#34;display: block; margin: auto auto auto 0;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Bingo! We are able to classify cancer cells based on healthy cell-of-origin!&lt;/p&gt;
&lt;p&gt;In conclusion, we were able to integrate cancer and healthy cell methylation signatures by finding factors describing variation they shared in common.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
